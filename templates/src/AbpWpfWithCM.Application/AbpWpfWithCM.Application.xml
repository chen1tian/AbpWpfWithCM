<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AbpWpfWithCM.Application</name>
    </assembly>
    <members>
        <member name="T:AbpWpfWithCM.Application.Jwt.JwtServices">
            <summary>
            Jwt服务
            </summary>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.JwtServices.#ctor(Microsoft.Extensions.Options.IOptions{AbpWpfWithCM.Application.Contracts.Jwt.Dto.JwtOptions},AbpWpfWithCM.Application.Jwt.RefreshTokenStores.IRefreshTokenStore)">
            <summary>
            ctor
            </summary>
            <param name="jwtOptions"></param>
            <param name="refreshTokenStore"></param>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.JwtServices.RequestTokenAsync(System.Guid,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            请求Token
            </summary>        
            <returns></returns>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.JwtServices.RequestTokenAsync(AbpWpfWithCM.Application.Contracts.Jwt.Dto.JwtUserDto,System.Security.Claims.Claim[])">
            <summary>
            请求Token
            </summary>        
            <returns></returns>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.JwtServices.RefreshAsync(System.String,System.String)">
            <summary>
            刷新
            </summary>
            <param name="user"></param>
            <param name="accessToken"></param>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.JwtServices.GetUserId(System.String)">
            <summary>
            获取UserId
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.JwtServices.GetPayload(System.String)">
            <summary>
            获取负载
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.JwtServices.RemoveRefreshTokenAsync(System.String)">
            <summary>
            删除刷新Token
            </summary>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="T:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.IRefreshTokenStore">
            <summary>
            刷新令牌存储
            </summary>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.IRefreshTokenStore.SaveAsync(System.Guid,System.String,System.DateTime)">
            <summary>
            添加刷新Token
            </summary>
            <param name="userId"></param>
            <param name="refreshToken"></param>
            <param name="expireTime"></param>
            <returns></returns>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.IRefreshTokenStore.GetAsync(System.Guid,System.String)">
            <summary>
            获取刷新Token
            </summary>
            <param name="userId"></param>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.IRefreshTokenStore.RemoveAsync(System.String)">
            <summary>
            移除用户的刷新Token
            </summary>
            <param name="refreshToken"></param>        
            <returns></returns>
        </member>
        <member name="T:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.RefreshTokenDto">
            <summary>
            刷新令牌Dto
            </summary>
        </member>
        <member name="P:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.RefreshTokenDto.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.RefreshTokenDto.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.RefreshTokenDto.ExpireTime">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="T:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.RefreshTokenStore">
            <summary>
            刷新令牌存储
            </summary>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.RefreshTokenStore.#ctor(Volo.Abp.EntityFrameworkCore.IDbContextProvider{AbpWpfWithCM.EntityFramework.AbpWpfWithCMDbContext})">
            <summary>
            构造函数
            </summary>
            <param name="dbContextProvider"></param>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.RefreshTokenStore.GetAsync(System.Guid,System.String)">
            <summary>
            获取
            </summary>
            <param name="userId"></param>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.RefreshTokenStore.RemoveAsync(System.String)">
            <summary>
            删除
            </summary>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="M:AbpWpfWithCM.Application.Jwt.RefreshTokenStores.RefreshTokenStore.SaveAsync(System.Guid,System.String,System.DateTime)">
            <summary>
            保存
            </summary>
            <param name="userId"></param>
            <param name="refreshToken"></param>
            <param name="expireTime"></param>
            <returns></returns>
        </member>
        <member name="M:CruiseTimeGJ.Application.Login.LoginService.Account(AbpWpfWithCM.Application.Contracts.Login.Dtos.LoginInput)">
            <summary>
            登录账户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CruiseTimeGJ.Application.Login.LoginService.GetCurrentUser">
            <summary>
            获取当前用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:CruiseTimeGJ.Application.Login.LoginService.OutLogin(System.String)">
            <summary>
            登出
            </summary>
            <returns></returns>
        </member>
        <member name="T:CruiseTimeGJ.Application.Login.RefreshTokenInput">
            <summary>
            刷新Token输入
            </summary>
        </member>
        <member name="P:CruiseTimeGJ.Application.Login.RefreshTokenInput.AccessToken">
            <summary>
            AccessToken
            </summary>
        </member>
        <member name="P:CruiseTimeGJ.Application.Login.RefreshTokenInput.RefreshToken">
            <summary>
            RefreshToken
            </summary>
        </member>
        <member name="T:CruiseTimeGJ.Application.Users.UserService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:CruiseTimeGJ.Application.Users.UserService.#ctor(Volo.Abp.Domain.Repositories.IRepository{AbpWpfWithCM.Domain.Domains.User,System.Guid})">
            <summary>
            
            </summary>
            <param name="repository"></param>
            <param name="userRepo"></param>
            <param name="dataFilter"></param>
        </member>
        <member name="M:CruiseTimeGJ.Application.Users.UserService.CreateFilteredQueryAsync(AbpWpfWithCM.Application.Contracts.Users.Dtos.UserListInput)">
            <summary>
            创建过滤查询
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CruiseTimeGJ.Application.Users.UserService.CreateAsync(AbpWpfWithCM.Application.Contracts.Users.Dtos.CreateUserDto)">
            <summary>
            创建用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CruiseTimeGJ.Application.Users.UserService.UpdateAsync(System.Guid,AbpWpfWithCM.Application.Contracts.Users.Dtos.UpdateUserDto)">
            <summary>
            更新用户
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:Volo.Abp.UserFriendlyException"></exception>
        </member>
        <member name="M:CruiseTimeGJ.Application.Users.UserService.ChangeSelfPassword(AbpWpfWithCM.Application.Contracts.Users.Dtos.ChangeSelfPasswordInput)">
            <summary>
            修改自己的密码
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:CruiseTimeGJ.Application.Users.UserService.ChangePassword(AbpWpfWithCM.Application.Contracts.Users.Dtos.ChangePasswordInput)">
            <summary>
            修改密码
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:CruiseTimeGJ.Application.Users.UserService.ValidPhoneNumber(AbpWpfWithCM.Application.Contracts.Users.Dtos.ValidPhoneNumberInput)">
            <summary>
            验证手机号码
            </summary>
            <param name="phoneNumber"></param>
            <param name="validCode"></param>
            <returns></returns>
            <summary>
            手机号码验证
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
    </members>
</doc>
