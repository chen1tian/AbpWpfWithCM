---
description: 新建/修改界面布局，新增/修改控件
globs: 
alwaysApply: false
---
## 技术架构
- 界面使用Wpf Mvvm框架Caliburn Micro
- 控件库使用MaterialDesign
- 优先使用`WindowsAPICodePack`来完成文件对话框，目录对话框，资源管理器等等功能。

## 存放位置
控件统一存放在`[WPF 客户端应用]/UI/Components/[控件名称复数形式]`目录下

## 弹窗使用
使用`弹窗帮助类`来完成消息提示

## 创建控件步骤
1. 确定控件名称，确定控件复数形式名称
2. 检查`[WPF 客户端应用]/UI/Components/[控件名称复数形式]`目录是否存在，不存在则创建。
3. 检查控件所需模型类，如果需要，则创建在`[WPF 客户端应用]/UI/Components/[控件名称复数形式]/Dtos`目录下。
4. 开始创建控件

## 命名格式
- View：<名称>View.xaml
- View后端：<名称>View.cs
- ViewModel: <名称>ViewModel.cs

## 依赖注入
使用Abp接口`ITransientDependency`及`ISingletonDependency`自动注入。
可以使用Ioc容器获取实例: `Ioc.Get<T>()`

## 注意
- 项目使用Mvvm模式，View后端不需要控件引用等代码

## 组件使用
1. 使用组件时，先从构造函数中注入组件, 注意使用属性，例如：
```csharp
public class MyViewModel : Screen
{
    /// <summary>
    /// 组件ViewModel
    /// </summary>
    public ComponentViewModel MyComponentViewModel {get; set;}

    public MyViewModel(ComponentViewModel myComponentViewModel)
    {
        MyComponentViewModel = myComponentViewModel;
    }
}
```

2. 在XAML中使用组件时，使用`x:Name`属性来引用组件的ViewModel，例如：
```xml
<UserControl x:Class="MyNamespace.MyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             >
    <Grid>
        <!-- MyComponentViewModel -->
        <ContentControl x:Name="MyComponentViewModel" />
    </Grid>
</UserControl>
```